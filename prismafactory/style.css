/* 
  style.css
  =========
  - Player's in-range cells have a dashed outline (no filled highlight).
  - Player cell is marked by an '@' ASCII overlay (instead of white outline).
  - Energy-region has distinct styling (ERG).
  - Powered cells still have their glow.
  - All building & resource ASCII styles are preserved.
*/

/* Base page styling */
body {
    background: #000;
    color: #0ff;
    font-family: monospace;
    margin: 0;
    padding: 0 1rem;
  }
  h1 {
    color: #f0f;
  }
  
  /* The game grid: 10×10 cells, 32px each. */
  #grid {
    display: grid;
    grid-template-columns: repeat(10, 32px);
    grid-template-rows: repeat(10, 32px);
    gap: 2px;
    margin-top: 1rem;
    user-select: none;
  }
  
  /* Each cell is 32×32. Default black bg and minimal ASCII placeholder. */
  .cell {
    position: relative;
    width: 32px;
    height: 32px;
    background: #000;
    border: 1px solid #333;
    box-sizing: border-box;
    overflow: hidden;
    text-align: center;
  }
  .cell::before {
    content: ' '; /* fallback for unstyled cells */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #333;
    font-size: 1rem;
    text-shadow: none;
    z-index: 0;
  }
  
  /* Player's location: show an ASCII '@' overlay instead of a white outline. */
  .player-cell {
    outline: none !important; /* remove any old outline */
    position: relative;
  }
  .player-cell::after {
    content: '@';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;
    text-shadow: 0 0 5px #fff;
    font-size: 1.2rem;
    z-index: 10;
  }
  
  /* Cells in player’s interaction range now get a dashed outline (no fill). */
  .in-range {
    /* box-shadow: none !important; */
    outline: 2px dashed rgba(255, 255, 0, 0.5) !important;
  }
  
  /* Powered cells keep an internal neon glow. */
  .powered-cell {
    box-shadow: inset 0 0 10px 2px rgba(0,255,255,0.5);
  }
  
  /* 
    ENERGY REGION 
    Shows "ERG" in bright yellow if the cell type is "energy-region" 
    (before placing an accumulator, etc.).
  */
  .energy-region::before {
    content: 'ERG';
    color: #ff0;
    text-shadow: 0 0 5px #ff0;
    z-index: 0;
  }
  
  /* 
    BUILDING & SPECIAL CELL ASCII 
    Each building type has unique text, color, and glow.
  */
  
  /* Empty cells */
  .empty::before {
    content: '.';
    color: #222;
  }
  
  /* Source cell -> 'S' */
  .source::before {
    content: 'S';
    color: #f0f;
    text-shadow: 0 0 5px #f0f;
  }
  
  /* Resource-node -> 'R' */
  .resource-node::before {
    content: 'R';
    color: #0f0;
    text-shadow: 0 0 5px #0f0;
  }
  
  /* Conveyor -> '>>>' (shown behind items). */
  .conveyor::before {
    content: '>>>';
    color: #0ff;
    text-shadow: 0 0 3px #0ff, 0 0 5px #0ff;
    z-index: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  
  /* Extractor -> 'EXT' */
  .extractor::before {
    content: 'EXT';
    color: #ff0;
    text-shadow: 0 0 5px #ff0;
  }
  
  /* Processor -> 'PRC' */
  .processor::before {
    content: 'PRC';
    color: #0ff;
    text-shadow: 0 0 5px #0ff;
  }
  
  /* Assembler -> 'ASM' */
  .assembler::before {
    content: 'ASM';
    color: #ff6600;
    text-shadow: 0 0 5px #ff6600;
  }
  
  /* Storage -> 'STG' */
  .storage::before {
    content: 'STG';
    color: #66f;
    text-shadow: 0 0 5px #66f;
  }
  
  /* Merger -> 'MRG' */
  .merger::before {
    content: 'MRG';
    color: #44f;
    text-shadow: 0 0 5px #44f;
  }
  
  /* Splitter -> 'SPL' */
  .splitter::before {
    content: 'SPL';
    color: #f44;
    text-shadow: 0 0 5px #f44;
  }
  
  /* Accumulator -> 'ACC' */
  .accumulator::before {
    content: 'ACC';
    color: #f0f;
    text-shadow: 0 0 6px #f0f;
  }
  
  /* PowerPole -> 'POL' */
  .powerPole::before {
    content: 'POL';
    color: #fff;
    text-shadow: 0 0 5px #fff;
  }
  
  /* Portal -> 'POR' */
  .portal::before {
    content: 'POR';
    color: #0ff;
    text-shadow: 0 0 5px #0ff;
  }
  
  /*
    ITEM INDICATORS
    The game appends <div class="item-indicator ..."> for items.
    We overlay ASCII letters (r, p, F, etc.) in neon colors.
  */
  .item-indicator {
    position: absolute;
    z-index: 1; /* above building text */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1rem;
    pointer-events: none;
  }
  
  /* Default fallback item symbol: '?' */
  .item-indicator::before {
    content: '?';
    color: #ccc;
    text-shadow: 0 0 4px #ccc;
  }
  
  /* Raw item -> 'r' in bright yellow */
  .item-raw::before {
    content: 'r';
    color: #ff0;
    text-shadow: 0 0 4px #ff0;
  }
  
  /* Processed item -> 'p' in cyan */
  .item-processed::before {
    content: 'p';
    color: #0ff;
    text-shadow: 0 0 4px #0ff;
  }
  
  /* Final item -> 'F' in magenta */
  .item-final::before {
    content: 'F';
    color: #f0f;
    text-shadow: 0 0 4px #f0f;
  }
  
  /* OPTIONAL: distinct resource styling if code sets these classes. */
  .item-ironOre::before {
    content: 'Fe';
    color: #aaa;
    text-shadow: 0 0 4px #aaa;
  }
  .item-ironPlate::before {
    content: '[Fe]';
    color: #888;
    text-shadow: 0 0 4px #888;
  }
  .item-ironGear::before {
    content: 'Gear';
    color: #ff0;
    text-shadow: 0 0 5px #ff0;
  }
  .item-silver::before {
    content: 'Ag';
    color: #ddd;
    text-shadow: 0 0 5px #ddd;
  }
  .item-copper::before {
    content: 'Cu';
    color: #fa0;
    text-shadow: 0 0 5px #fa0;
  }
  
  /*
    STORAGE-ITEMS 
    (multiple .item-indicator children in one cell)
  */
  .storage-items {
    position: absolute;
    top: 2px;
    left: 2px;
    right: 2px;
    bottom: 2px;
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: flex-start;
  }
  .storage-items .item-indicator {
    width: 12px;
    height: 12px;
    font-size: 0.7rem;
    z-index: 1;
    margin: 1px;
  }
  
  /*
    ARROW INDICATORS 
    The game appends .arrow to indicate conveyor/building direction.
  */
  .arrow {
    color: #ff0;
    text-shadow: 0 0 5px #ff0;
    position: absolute;
    top: 2px;
    right: 2px;
    font-weight: bold;
    pointer-events: none;
    z-index: 2;
  }
  
  /*
    BLUEPRINT PREVIEW 
    A translucent overlay shown when hovering + selecting a building action.
  */
  .blueprint-preview {
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0;
    background: rgba(0, 255, 255, 0.1);
    pointer-events: none;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
  }
  .blueprint-preview .arrow {
    color: #0ff !important;
    text-shadow: 0 0 5px #0ff !important;
  }
  
  /*
    TOOLBAR & ACTION BUTTONS
  */
  .toolbar {
    margin-top: 0.5rem;
  }
  .selected-action {
    outline: 2px solid #ff0;
  }
  
  /*
    MESSAGE LOG
  */
  .message-log {
    margin-top: 1rem;
    max-height: 100px;
    overflow-y: auto;
    border: 1px solid #555;
    padding: 4px;
    font-size: 0.9rem;
    background: #111;
    color: #0ff;
    text-shadow: 0 0 3px #0ff;
  }
  