/* style.css */
/* NEON ASCII THEME */

:root {
  --bg-color: #000000;
  --neon-green: #39FF14;
  --neon-pink: #FF00FF;
  --neon-blue: #00FFFF;
  --cell-size: 40px;
}

/* Base styling */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: 'Lucida Console', Courier, monospace;
}

body {
  background-color: var(--bg-color);
  color: var(--neon-green);
  padding: 8px;
  zoom: 1.5;
}

/* ASCII Title Art */
.ascii-title {
  color: var(--neon-pink);
  text-align: center;
  margin-bottom: 8px;
  line-height: 1.1;
}

/* Generic "panel" with ASCII feel */
.ascii-panel {
  border: 2px dashed var(--neon-green);
  padding: 8px;
  margin: 8px 0;
  background-color: rgba(255, 255, 255, 0.05);
}

/* ASCII border for game elements */
.ascii-border {
  border: 2px dashed var(--neon-green);
  padding: 8px;
  margin: 8px 0;
}

/* Game grid styling */
#grid {
  display: grid;
  grid-template-columns: repeat(10, var(--cell-size));
  grid-template-rows: repeat(10, var(--cell-size));
  justify-content: center;
  align-items: center;
  margin: 0 auto 12px auto;
}

/* Each cell is a square */
.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px dashed var(--neon-green);
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--neon-green);
  font-size: 0.75rem;
  text-align: center;
  overflow: hidden;
}

/* Hovered or in-range highlight */
.cell.in-range {
  background-color: rgba(57, 255, 20, 0.1);
}
/* .in-range {
  box-shadow: 0 0 0 2px rgba(255, 255, 0, 0.2) inset;
} */

/* Player cell highlight */
.cell.player-cell {
  border: 2px solid var(--neon-pink);
}

  /* Player's location: show an ASCII '@' overlay instead of a white outline. */
  .player-cell {
    outline: none !important; /* remove any old outline */
    position: relative;
  }
  .player-cell::after {
    content: '@';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;
    text-shadow: 0 0 5px #fff;
    font-size: 1.2rem;
    z-index: 10;
  }

/* Resource node, source, etc. */
.cell.resource-node {
  background-color: rgba(255, 255, 0, 0.3); /* was 0.1 */
}
.cell.energy-region {
  background-color: rgba(0, 255, 255, 0.4); /* was 0.15 */
}
.cell.resource-node::after {
  content: 'FE';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #ffff00; /* bright yellow */
  font-size: 1rem;
  text-shadow: 0 0 4px #ffff00;
  pointer-events: none;
}

.cell.energy-region::after {
  content: 'EN';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #00ffff;
  font-size: 1rem;
  text-shadow: 0 0 4px #00ffff;
  pointer-events: none;
}
.cell.source {
  background-color: rgba(255, 165, 0, 0.15);
}


/* Powered highlight */
.cell.powered-cell {
  box-shadow: 0 0 8px var(--neon-blue);
}

/* Building types: color-coded (a bit more distinct) */
.cell.conveyor {
  position: relative; /* so child .conveyor-anim can be absolutely positioned */
  background-color: transparent;
  /* You can remove the old static background-image, since we'll do it in .conveyor-anim */
}

/* The scrolling overlay for conveyors */
.conveyor-anim {
  position: absolute;
  inset: 0;
  background-image: repeating-linear-gradient(
    to right,
    rgba(0, 180, 255, 0.4) 0,
    rgba(0, 180, 255, 0.4) 4px,
    transparent 4px,
    transparent 8px
  );
  animation: conveyorMove 0.3s linear infinite;
  z-index: 1; /* base layer, arrow is above */
}

@keyframes conveyorMove {
  0%   { background-position: 0 0; }
  100% { background-position: 24px 0; }
}

/* Direction classes rotate the conveyor-anim div to face the correct direction */
.cell.conveyor.dir-up    .conveyor-anim { transform: rotate(270deg); }
.cell.conveyor.dir-down  .conveyor-anim { transform: rotate( 90deg); }

.cell.conveyor.dir-left  .conveyor-anim { transform: rotate(180deg); }
/* dir-right is default horizontal, so no transform needed */

/* Arrow on top of the stripes */
.cell.conveyor .arrow {
  position: absolute;
  bottom: 4px;  /* a little padding from the bottom */
  left: 4px;    /* a little padding from the left */
  transform: none;
  color: var(--neon-pink);
  font-size: 0.8rem;
  z-index: 20;
}


.cell.extractor {   background-color: rgba(255, 50, 50, 0.15);  }
.cell.processor {   background-color: rgba(0, 160, 160, 0.15);  }
.cell.assembler {   background-color: rgba(160, 0, 160, 0.15);  }
.cell.storage   {   background-color: rgba(255, 215, 0, 0.15);  }
.cell.merger    {   background-color: rgba(0, 100, 0, 0.15);    }
.cell.splitter  {   background-color: rgba(95, 158, 160, 0.15); }
.cell.portal    {   background-color: rgba(138, 43, 226, 0.15); }
.cell.accumulator { background-color: rgba(0, 255, 127, 0.15);  }
.cell.powerPole   { background-color: rgba(255, 69, 0, 0.15);   }

/* Building label for clarity (ASCII style) */
.building-label {
  position: absolute;
  top: 2px;
  left: 2px;
  font-size: 0.65rem;
  color: var(--neon-blue);
  pointer-events: none;
  opacity: 0.85;
}

/* Item indicators */
.item-indicator {
  /* size it smaller to avoid big squares */
  width: 20%;
  height: 20%;
  border: none; /* remove dashed border */
  display: block; /* or flex, if you prefer */
  position: relative;
  /* No text needed anymore, so no alignment or color for text */
}

/* RAW -> circle */
.item-raw {
  background-color: var(--neon-green);
  border-radius: 50%;
}

/* PROCESSED -> diamond shape (square rotated 45deg) */
.item-processed {
  background-color: var(--neon-blue);
  transform: rotate(45deg);
}

/* FINAL -> star shape (example polygon) */
.item-final {
  background-color: var(--neon-pink);
  clip-path: polygon(
    50% 0%,
    61% 35%,
    98% 35%,
    68% 57%,
    79% 91%,
    50% 72%,
    21% 91%,
    32% 57%,
    2% 35%,
    39% 35%
  );
}

/* For storing multiple items visually in storage */
.storage-items {
  display: flex;
  flex-wrap: wrap;
  gap: 2px;
  align-items: center;
  justify-content: center;
}

/* Arrow direction text (for building output directions) */
.arrow {
  position: absolute;
  bottom: 4px;  /* a little padding from the bottom */
  left: 4px;    /* a little padding from the left */
  transform: none;
  color: var(--neon-pink);
  font-size: 0.8rem;
  z-index: 20;
}



/* Each direction sets one side of the triangle to neon-pink */
.arrow.up {
  border-bottom-color: var(--neon-pink);
}
.arrow.down {
  border-top-color: var(--neon-pink);
}
.arrow.left {
  border-right-color: var(--neon-pink);
}
.arrow.right {
  border-left-color: var(--neon-pink);
}

/* Blueprint preview overlay (with dotted border and ASCII label) */
.blueprint-preview {
  position: absolute;
  inset: 0;
  border: 1px dotted var(--neon-pink);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0.8;
  pointer-events: none;
}

.blueprint-preview::before {
  content: "[BP]";
  position: absolute;
  top: 2px;
  left: 2px;
  font-size: 0.6rem;
  color: var(--neon-pink);
  opacity: 0.8;
}

/* Toolbar styling */
.toolbar button {
  margin: 2px;
  background-color: #111111;
  color: var(--neon-green);
  border: 1px dashed var(--neon-green);
  padding: 4px 8px;
  cursor: pointer;
  font-size: 0.8rem;
}
.toolbar button:hover {
  background-color: #222222;
}
.selected-action {
  border-color: var(--neon-pink) !important;
}

/* Message log */
.message-log {
  min-height: 2em;
  padding: 4px;
  font-size: 0.9rem;
  margin-top: 4px;
}

/* Crafting panel */
#craftingPanel {
  display: none;
}

/* Inventory list inside crafting panel */
#playerInventoryList {
  list-style-type: none;
  padding-left: 0;
}

h2 {
  margin-bottom: 6px;
}
hr {
  margin: 6px 0;
}


.building-ascii pre {
  margin: 0;
  font-size: 0.5rem; /* or another size that looks good */
  line-height: 0.7rem;
  pointer-events: none; /* so clicks pass through to the cell */
}
